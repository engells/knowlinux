# vim:ts=4



正規表示法
----------------------------------------------------
[:alpha:]	代表任何英文大小寫字元，亦即 A-Z, a-z
[:upper:]	代表大寫字元，亦即 A-Z
[:lower:]	代表小寫字元，亦即 a-z
[:digit:]	代表數字而已，亦即 0-9
[:alnum:]	代表英文大小寫字元及數字，亦即 0-9, A-Z, a-z
[:space:]	任何會產生空白的字元，包括空白鍵, [Tab], CR 等等
[:blank:]	代表空白鍵與 [Tab] 按鍵兩者
[:graph:]	除了空白字元 (空白鍵與 [Tab] 按鍵) 外的其他所有按鍵
[:cntrl:]	代表鍵盤上面的控制按鍵，亦即包括 CR, LF, Tab, Del.. 等等
[:print:]	代表任何可以被列印出來的字元
[:punct:]	代表標點符號 (punctuation symbol)，亦即：" ' ? ! ; : # $...
[:xdigit:]	代表 16 進位的數字類型，因此包括： 0-9, A-F, a-f 的數字與字元
-------------------------
[](中括號)：裡面不論有幾個字元，只代表某『一個』字元，例如[^[:alpha:]]表示行首不是英文大小寫字元
行首字元 ^ 與行尾字元 $ ，字元 ^ 在中括號[]裡面代表『非』
.(小數點)：代表『一定有一個任意字元』的意思
*(星星號)：代表『重複前一個字元， 0 到無窮多次』的意思，為組合形態，例如 x* 表示零到多個的x
+(加號)：代表重複『一個或一個以上』的前一個 RE 字符
?(問號)：代表『零個或一個』的前一個 RE 字符
{}(大括號)：限定連續 RE 字符範圍，例如 x\{2,\}表示兩個以上的x，x\{2,5\}表示兩個到五個的x
|(管線符號，enter鍵上頭那個)：用或的方式找出數個字串，例如'gd|good'表示gd 『或』 good 這兩個字串
()：代表『群組』字串，例如'g(la|oo)d'表示 glad 或 good 字串
()+：代表多個重複群組的判別，例如'A(xyz)+C'表示開頭是 A 結尾是 C ，中間有一個以上的 "xyz" 字串的意思

