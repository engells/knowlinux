#!/bin/bash
# vim:ts=4
# program: Using to note the knowledge about Visual Studio Code
# made by: Engells
# date: Aug 30, 2025
# content: Update how to install vscode.



常用指令
====================
code
    # lunch virtual studio code program
code file_name
    # open a file
code /path/to/folder/
    # open a Folder, run:

code -v
    # print version:

code --list-extensions
    # list the installed extensions
code --install-extension extension-id
    # installs or updates the extension
code --uninstall-extension extension-id
    # uninstalls an extension

code -h
    # for command line help




vscode 配置 pipenv
====================
edit settings.json
    File > Preferences > Settings 或 Ctrl + Shift + p，輸入 Settings

選擇【Preferences: Open Settings (JSON)】
    在 settings.json 尾端新增一行，加入虛擬路徑，如果存在多個虛擬環境，用逗號分隔：
    "python.venvPath": "/path/to/virtual,/home/xxxx/.virtualenvs"
    # 視窗系統 "python.venvPath": "C:\\Users\\user_name\\.virtualenvs"

重啟 vscode
    再次進入，打開項目 python 文件，左下角狀態欄會顯示 python 版本，點擊彈出列表，出現虛擬環境可以選擇，切換到虛擬環境，左下角的狀態欄也會隨之變更

實際操作後之 settings.json
    "python.venvPath": "/path/to/project/.venv/",
    "python.defaultInterpreterPath": "/path/to/project/.venv/bin/python3",
    "python.linting.pylintEnabled": true,
    "python.linting.enabled": true,


參考資料：https://segmentfault.com/a/1190000017558652




vscode 配置 virtualenv
====================
edit settings.json
    File > Preferences > Settings
      {
      	  // 這個是代理，不要可以直接刪掉
          "http.proxy": "http://proxy-cn.toshiba.co.jp:8080/",
          "git.ignoreLegacyWarning": true,
          "terminal.integrated.rendererType": "dom",
          "window.zoomLevel": 1,
          // 這里是讓 vscode 自動獲取到系統內 virtualenv 的虛擬環境
          "python.venvPath": "/home/xxxx/virtualenvFolder",
          "python.venvFolders": [
              "envs",
              ".pyenv",
              ".direnv",
              ".env",
          ],
          "editor.fontSize": 20,
          "explorer.confirmDelete": false,
          "editor.fontWeight": "700",
          "debug.console.fontFamily": "Fira Code",
          "debug.console.fontSize": 19,
          "files.autoSave": "afterDelay",
          "markdown.preview.fontSize": 17,
          "terminal.integrated.lineHeight": 0,
          "terminal.integrated.fontSize": 13,
          "terminal.integrated.fontWeight": "800",
          // 以下會根據虛擬環境的不同，而變化 python 解釋器的位置
          "python.pythonPath": "/home/xxxx/virtualenvFolder/py3-face-flask/bin/python",
          "editor.fontLigatures": null,
          // vscode 字體類型
          "editor.fontFamily": "Hack, 'Courier New', monospace"
      
      }


參考資料：https://blog.csdn.net/weixin_43270713/article/details/105768708




vscode 使用 pipenv 環境中的 jupyter
====================
1. 安裝完成 python、pipenv、vscode，配置好 pipenv 的環境變量
2. 非虛擬環境下安裝 jupyter，確保可以正常運行
3. 將 Pipenv 環境路徑添進 vscode 之 settings.json
   pipenv shell => pipenv --venv => "python.venvPath": "/path/to/virtual"
4. 重啟 vscode
5. 安装 ipykernel
   pipenv shell => pipenv install ipykernel
6. 新建 ipynb，查詢 sys.path
   import sys => print(sys.path)


參考資料：https://www.douban.com/note/750959014/ ; https://codingnote.cc/zh-tw/p/191622/





vscode 配置 python 環境
====================
1. 點擊 Extensions 圖示，安裝微軟官方的 Python 擴充套件
2. 點擊 Extensions 圖示，安裝 Jun Han 的 Code Runner 擴充套件
3. 點擊 Manage 圖示 > Settings > 輸入【python formatting】> 確認採用 autopep8
4. 點擊 Manage 圖示 > Settings > 輸入【FormatOnSave】> 勾選【Format a file on save】選項，VSCode 在儲存檔案時，自動依照 PEP8 程式碼風格排版程式碼
5. 點擊 Manage 圖示 > Command Palette... > 輸入【python: Select Interpreter】 > 選擇【Enter interpreter path】 > 選擇【Find(搜尋)】 > 選擇 Python 直譯器
6. 在設置（settings.json）里添加 "python.linting.pylintArgs": ["--generate-members"]
   # pylint 是 vscode 的 python 語法檢查器，為靜態檢查，在取用第三方庫時，有些組件只有在運行程式碼的時候才會被建立，pylint 就找不到該組件，以上列設置避免相關問題

參考資料：https://www.learncodewithmike.com/2019/11/python2-visual-studio-code-python.html
　　　　　https://blog.csdn.net/ngy321/article/details/88972255




Install vscode on ubuntu 20 and 24
====================
Install via Repository
----------
sudo apt update && sudo apt install apt-transport-https build-essential # build-essential fot c language
wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg && sudo install -D -o root -g root -m 644 microsoft.gpg /usr/share/keyrings/microsoft.gpg && rm -f microsoft.gpg
sudo sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/usr/share/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'
sudo apt update && sudo apt install code
  # install -??- libx11-xcb1 libxcb-dri3-0 - libasound2 libice6 libsm6 libxaw7 libxft2 libxmu6 libxpm4 libxt6 x11-apps xbitmaps


Install via DEB Package
----------
https://code.visualstudio.com/download


Install via Snap
----------
sudo apt install snapd
sudo snap install vscode --classic




參考資料
====================
Python Journey (2) - VS Code 基本使用技巧  https://www.weithenn.org/2018/05/python-journey-part02-how-to-use-vscode.html


