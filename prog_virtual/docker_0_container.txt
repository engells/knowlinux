##/bin/bash
# vim:ts=2
# program: Know about docker container
# made by: Engells
# date: Apr 9, 2021
# content: Just for memo



Container 指令
====================
查詢 container
	docker ps 或 docker ps -a
	docker inspect -f "{{ .State.Pid }}" container_id


產生並啟動 container
	docker run -itd --name=dbmaria -p 80:8080 -v /home/db/maria:/var//lib/maria -e MYSQL_ROOT_PASSWORD='123' -e MYSQL_DATABASE='ayu' \
    ubuntu:16.04 /bin/bash
    run： docker create + docker start == docker run，docker run 參數應可用於 docker create
		-i： 以互動模式啟動 container
		-t： 產生虛擬終端機
		-d： 背景執行 container
		--name=dbmaria： 將 container 命名為 dbmaria，亦可採 --name dbmaria
		-p 80:8080： 將 host 的 80 port 映射為 container 的 8080 port，可使用多個 -p 參數
		-v /home/db/maria:/var//lib/maria： 將 host 的 /home/db/maria 掛載為 container 的 /var//lib/maria，可使用多個 -v 參數
		-e MYSQL_ROOT_PASSWORD='123'： 設定環境參數，資料庫管理密碼為 123
		-e MYSQL_DATABASE='ayu'： 設定環境參數，資料庫為 ayu
		ubuntu:16.04： 以 repository:tag 格式表示作為基底的 image
		bin/bash： 表示在 container 要執行的程式
		--rm： 在 container 停止後刪除 container
		--restart=xxx： 若 container 停止後，重新啟動模式
    --privileged： 以 privileged 模式產生 container
    --net=user_defined_network： 連接至使用者自行定義之 docker 網路，通常為虛擬橋接器


啟動已存在之 container
	docker start


進入 container
	docker exec -it [container id or name] /bin/bash
	docker attach [container id or name]
	nsenter --target PID --mount --uts --ipc --net --pid


停止 container
	docker stop -t 2 [container id or name]


導出 container 並回存為 local image
	docker export [container id or name] > file.tar
	cat file.tar | docker import - ubuntu:16.04


刪除 container
	docker rm [container id]
		# 僅能刪除停止運作之 container，可加入 -f 參數強制刪除運作中的 container
	docker rm -f [container name]
	docker rm $(docker ps -a -q)


Container 互連
  dockrn run -d --name srv_db image_ref
  docker run -d --link srv_db:db_alias --name srv_web image_ref


其他
  docker restart


