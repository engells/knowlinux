##/bin/bash
# vim:ts=2
# program: Know about network with docker
# made by: Engells
# date: Apr 9, 2021
# content: Just for memo



常用指令
====================
docker network create brd0
docker network rm brd0
docker network [create | inspect | ls | rm | connect | disconnect] network_name




Network bridge
====================
使用自設橋接器
---------------
停止 docker 服務，並刪除 docker 預設的橋接器
  sudo systemctl stop docker | sudo service docker stop
  sudo ip link set dev docker0 down | sudo ifconfig docker0 down | sudo ifdown docker0
  sudo ip link del docker0 | sudo apt install bridge-utils && sudo brctl delbr docker0
  # memo: nmcli connection delete docker0 ;; docker network rm docker0 ;; brctl delbr docker0

建立一個橋接器 brd0
  sudo brctl addbr brd0
  sudo ip addr add 172.26.1.1/24 dev brd0
  sudo ip link set dev brd0 up

檢視確認橋接器建立並啟動
  sudo ip addr show brd0

設定 Docker 服務， 預設橋接到建立的橋接器上， 此步驟似無法省略
  sudo vim /etc/docker/daemon.json >> {"bridge": "brd0"}
    # memo: sudo echo 'DOCKER_OPTS="--bridge=brd0"' >> /etc/default/docker
    # memo: /etc/docker/daemon.json ;; dockerd --config-file /etc/docker/daemon.json
  sudo systemctl restart docker | sudo service docker start


使用 docker 預設橋接器
---------------
編輯預設橋接器組態
  edit /etc/docker/daemon.json >> {"bip": "172.26.1.1/24"}
	  # 相關檔案 /etc/default/docker
    #   DOCKER_OPTS="--dns 8.8.8.8 --dns 8.8.4.4 --bip=172.26.1.1/24 -b=docker0"
	  #     --dns：指 docker0 所提供 DNS 位址，--bip：設定的網段，-b：指定橋接網路介面


使用 docker 指令建置橋接器
---------------
建立橋接網絡(bridge)
  docker network create -d bridge bridge_name
  docker network create --driver=bridge --subnet=172.26.0.0/16 --ip-range=172.26.1.0/24 --gateway=172.26.1.1 bridge_name


補充
---------------
停止使用 docker 預設橋接器
  sudo vim /etc/docker/daemon.json >> {"bridge": "none"}




網路型態
====================
--net 參數
  --net=bridge                預設選項，container 有網卡及 IP，經由 veth 連接至 docker0 虛擬橋接器，各 container 互通
  --net=none                  container 沒有網卡及 IP，只有 network namespace
  --net=host                  container 沒有網卡及 IP，也沒有 network namespace
  --net=container_ref         與 container_ref 共用網路配置
  --net=user_defined_network  使用者以 docker network 自行建置網路，同一網路的 container 彼此可見


