=============================================================================================================
iptables [-t tables] [-L] [-nv] [-FXZ]
參數：
-t ：後面接 table ，例如 nat 或 filter ，若省略此項目，則使用預設的 filter
-L ：列出目前的 table 的規則
-n ：不進行 IP 與 HOSTNAME 的反查，顯示訊息的速度會快很多！
-v ：列出更多的資訊，包括通過該規則的封包總位元數、相關的網路介面等
-F ：清除所有的已訂定的規則；
-X ：殺掉所有使用者 "自訂" 的 chain (應該說的是 tables ）囉；
-Z ：將所有的 chain 的計數與流量統計都歸零

iptables [-t nat] -P [INPUT,OUTPUT,FORWARD] [ACCEPT,DROP]
參數：
-P ：定義政策( Policy )。注意，這個 P 為大寫啊！
ACCEPT ：該封包可接受
DROP   ：該封包直接丟棄，不會讓 client 端知道為何被丟棄。
iptables -P INPUT DROP
iptables -P OUTPUT ACCEPT
iptables -P FORWARD ACCEPT

=============================================================================================================
iptables [-AI 鏈] [-io 網路介面] [-p 協定] [-s 來源IP/網域] [-d 目標IP/網域] -j [ACCEPT|DROP]
參數：
-AI 鏈：針對某的鏈進行規則的 "插入" 或 "累加"
    -A ：新增加一條規則，該規則增加在原本規則的最後面。例如原本已經有四條規則，
         使用 -A 就可以加上第五條規則！
    -I ：插入一條規則。如果沒有指定此規則的順序，預設是插入變成第一條規則。
         例如原本有四條規則，使用 -I 則該規則變成第一條，而原本四條變成 2~5 號
    鏈 ：有 INPUT, OUTPUT, FORWARD 等，此鏈名稱又與 -io 有關，請看底下。

-io 網路介面：設定封包進出的介面規範
    -i ：封包所進入的那個網路介面，例如 eth0, lo 等介面。需與 INPUT 鏈配合；
    -o ：封包所傳出的那個網路介面，需與 OUTPUT 鏈配合；

-p 協定：設定此規則適用於哪種封包格式，主要的封包格式有： tcp, udp, icmp 及 all 。

-s 來源 IP/網域：設定此規則之封包的來源項目，可指定單純的 IP 或包括網域，例如：
   IP  ：192.168.0.100
   網域：192.168.0.0/24, 192.168.0.0/255.255.255.0 均可。
   若規範為『不許』時，則加上 ! 即可，例如：
   -s ! 192.168.100.0/24 表示不許 192.168.100.0/24 之封包來源；

-d 目標 IP/網域：同 -s ，只不過這裡指的是目標的 IP 或網域。

-j ：後面接動作，主要的動作有接受 (ACCEPT)、丟棄 (DROP) 及記錄 (LOG)

#所有的來自 lo 這個介面的封包，都予以接受
 iptables -A INPUT -i lo -j ACCEPT
 
#目標來自 192.168.0.1 這個 IP 的封包都予以接受
 iptables -A INPUT -i eth0 -s 192.168.0.1 -j ACCEPT

#目標來自 192.168.1.0/24 可接受，但 192.168.1.10 丟棄
 iptables -A INPUT -i eth0 -s 192.168.1.10 -j DROP
 iptables -A INPUT -i eth0 -s 192.168.1.0/24 -j ACCEPT

=============================================================================================================
iptables [-AI 鏈] [-io 網路介面] [-p tcp,udp] \
> [-s 來源IP/網域] [--sport 埠口範圍] \
> [-d 目標IP/網域] [--dport 埠口範圍] -j [ACCEPT|DROP]
參數：
--sport 埠口範圍：限制來源的埠口號碼，埠口號碼可以是連續的，例如 1024:65535
--dport 埠口範圍：限制目標的埠口號碼。

#想要連線進入本機 port 21 的封包都抵擋掉：
 iptables -A INPUT -i eth0 -p tcp --dport 21 -j DROP

#想連到我這部主機的網芳 (upd port 137,138 tcp port 139,445) 就放行
 iptables -A INPUT -i eth0 -p udp --dport 137:138 -j ACCEPT
 iptables -A INPUT -i eth0 -p tcp --dport 139 -j ACCEPT
 iptables -A INPUT -i eth0 -p tcp --dport 445 -j ACCEPT

#只要來自 192.168.1.0/24 的 1024:65535 埠口的封包， 只要想要連線到本機的 ssh port 就予以抵擋
 iptables -A INPUT -i eth0 -p tcp -s 192.168.1.0/24 --sport 1024:65534 --dport ssh -j DROP

#將來自任何地方來源 port 1:1023 的主動連線到本機端的 1:1023 連線丟棄
 iptables -A INPUT -i eth0 -p tcp --sport 1:1023 --dport 1:1023 --syn -j DROP

=============================================================================================================
iptables -A INPUT -m state --state 狀態
參數：
-m ：一些 iptables 的模組，主要常見的有：
     state ：狀態模組
     mac   ：網路卡硬體位址 (hardware address)
--state ：一些封包的狀態，主要有：
     INVALID    ：無效的封包，例如資料破損的封包狀態
     ESTABLISHED：已經連線成功的連線狀態；
     NEW        ：想要新建立連線的封包狀態；
     RELATED    ：這個最常用！表示這個封包是與我們主機發送出去的封包有關

#只要已建立或相關封包就予以通過，只要是不合法封包就丟棄
 iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
 iptables -A INPUT -m state --state INVALID -j DROP

#針對區域網路內的 aa:bb:cc:dd:ee:ff 主機開放其連線
 iptables -A INPUT -m mac --mac-source aa:bb:cc:dd:ee:ff -j ACCEPT

=============================================================================================================
iptables -A INPUT -p icmp --icmp-type 類型 -j ACCEPT
參數：
--icmp-type ：後面必須要接 ICMP 的封包類型，也可以使用代號， 例如 8 代表 echo request 的意思。

#讓 0,3,4,11,12,14,16,18 的 ICMP type 可以進入本機：
[root@linux ~]# vi somefile
#!/bin/bash
icmp_type="0 3 4 11 12 14 16 18"
for typeicmp in $icmp_type
do
   iptables -A INPUT -i eth0 -p icmp --icmp-type $typeicmp -j ACCEPT
done

[root@linux ~]# sh  somefile

