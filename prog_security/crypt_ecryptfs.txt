# vim:ts=4
# program: Using to note the knowledge about eCryptfs in Ubuntu
# made by: Engells
# date: Dec 6, 2023
# content: Just for memo



建立加密目錄
====================
安裝套件
  sudo apt-get install ecryptfs-utils

初次加密釋例：
  建立加密用目錄
	mkdir /path/to/real
  建立掛載用目錄（非必要步驟）
	mkdir /path/to/mount
  以加密方式掛載加密目錄
	sudo mount -t ecryptfs /path/to/real /path/to/mount
      # IBM 建議 /path/to/real 與 /path/to/mount 為同一個目錄，以增加安全性
      # 選擇輸入下列資訊：
      # passphrase：密碼
      # cipher：加密方式，預設是 AES
      # key bytes：密碼長度，預設是 16 位元組
      # plaintext passthrough(y/n) [n]：密碼是否以明文顯示，預設是「否」
      # filename encryption (y/n) [n]：目錄內檔名是否加密，預設是「否」。檔名加密的話，進入目錄所看到的是一堆亂碼的檔名
      # Filename Encryption Key (FNEK) Signature [799d2f922c0f1f26]:
      #	  無論是否加密檔案名稱，都會產生加密檔名用的金鑰(FNEK/sig)，該金鑰預設紀錄在 /root/.ecryptfs/sig-cache.txt
      #	  由此推測初次建立加密目錄時即使選擇不加密檔案名稱，後續應可改換為加密檔案名稱
      # Would you like to proceed with the mount (yes/no)？選擇「yes」，繼續掛載
      # Would you like to append sig [799d2f922c0f1f26] to [/root/.ecryptfs/sig-cache.txt]
      # in order to avoid this warning in the future (yes/no)？如果選擇「yes」，FNEK 會存入檔案。
      #	下一次使用該密碼時，系統就不會發出警示說無相關的 FNEK/sig
    sudo mount -t ecryptfs -o key=openssl:keyfile=/usb-drive/mykey.pem /path/to/real /path/to/mount
      # 掛載時直接指定解密方式及密碼檔案，
      # -o key=passphrase,ecryptfs_cipher=aes,ecryptfs_key_bytes=32,ecryptfs_passthrough=n,ecryptfs_enable_filename_crypto=y
進入掛載目錄編輯檔案
    cd /path/to/mount; touch xyz.txt
卸載目錄
    sudo umount -t ecryptfs /path/to/mount
      # 實際上同步對掛載的目錄作卸載及解密作業，也就是掛載的目錄解除加密，但掛載目錄與加密用目錄為同一個目錄，則仍維持加密狀態


後續使用釋例
  再度以加密方式掛載加密目錄
    sudo mount -t ecryptfs /path/to/real /path/to/mount
      # 選擇輸入下列資訊，所有資訊需與初次加密時相同
      # passphrase、cipher、key bytes、plaintext passthrough 以及 filename encryption (y/n) [n]
  卸載目錄
    sudo umount -t ecryptfs /path/to/mount


將加密參數帶入指令掛載
  手動輸入參數
    sudo mount -t ecryptfs /path/to/real /path/to/mount -o \
      key=passphrase, \
      ecryptfs_cipher=aes, \
      ecryptfs_key_bytes=16, \
      ecryptfs_passthrough=n, \
      ecryptfs_enable_filename_crypto=y \

  配合密碼檔使用
    echo 'passwd=brabrabra...' > /path/to/mypasswd.txt
    sudo mount -t ecryptfs /path/to/real /path/to/mount -o \
      key=passphrase:passfile=/path/to/mypasswd.txt, \
      ecryptfs_cipher=aes, \
      ecryptfs_key_bytes=16, \
      ecryptfs_passthrough=n

  登出時自動清除敏感記錄，將與 ecryptfs 有關的 history 及 nautilus 的縮圖刪除
    rm -f ~/.thumbnails/normal/*
    history -w && history -c && sed -i '/ecryptfs/d' ~/.bash_history




相關指令
====================
ecryptfs-setup-private: 
	# creates a ~/Private directory to contain encrypted information. This utility can be run by unprivileged users to keep data private from other users on the system.

ecryptfs-mount-private and ecryptfs-umount-private
	# will mount and unmount respectively, a user's ~/Private directory.

ecryptfs-add-passphrase
	# adds a new passphrase to the kernel keyring.

ecryptfs-manager
	# manages eCryptfs objects such as keys.

ecryptfs-stat <filename>
	# allows you to view the ecryptfs meta information for a file.




加密的使用者家目錄之備份與回復
====================
安裝 Ubuntu 時加密家目錄，後續重灌或改換作業系統時，將原先家目錄資料備份到新的家目錄方式如下
進入原先的加密目錄
  cd /home/.ecryptfs/user_name/.Private
取出加密金鑰
  sudo ecryptfs-unwrap-passphrase wrapped-passphrase 
      # Passphrase：輸入原先的加密密碼
      # 會看到一串的密碼，將其保留起來，後續以「key x」來代表
建立備份用目錄
    mkdir /path/to/restore
複製加密組態
    sudo ecryptfs-add-passphrase --fnek
      # Passphrase：輸入先前保留的 key x。接著出現以下兩行：
      # Inserted auth tok with sig [brabrabra...1] into the user session keyring
      # Inserted auth tok with sig [brabrabra...2] into the user session keyring
      # 記下 [] 中的兩串密碼字串。第二個是解密檔案名稱用的。
將加密目錄掛載到備份用目錄
    sudo mount -t ecryptfs /home/.ecryptfs/user_name/.Private /path/to/restore
      # Passphrase：輸入原先的加密密碼
      # 選擇 cipher、key bytes、plaintext passthrough、filename encryption(需選擇 no )、FNEK(先前第二個[]內的內容)
      #  Would you like to proceed with the mount (yes/no)？選 yes
      # Would you like to append sig [ ... ] to [/root/.ecryptfs/sig-cache.txt]
      # in order to avoid this warning in the future (yes/no)？若備份的資料不需加密，此處選 no，否則可選 yes




自動掛載加密目錄
====================
建立 /root/.ecryptfsrc 檔案，加入下列內容
  key=passphrase:passphrase_passwd_file=/mnt/usb/passwd_file.txt
  ecryptfs_sig=5826dd62cf81c615
  ecryptfs_cipher=aes
  ecryptfs_key_bytes=32
  ecryptfs_passthrough=n
  ecryptfs_enable_filename_crypto=y
  # 注意要同步異動 /root/.ecryptfs/sig-cache.txt 檔案，加入

建立 /mnt/usb/passwd_file.txt 檔案，加入下列內容
  passphrase_passwd=[real_passphrase]

將下列內容加入	 /etc/fstab:
  /dev/sdb1	/mnt/usb	ext3		ro			0	0
  /srv		/srv		ecryptfs	defaults	0	0
    # 第一像表示以唯獨屬性掛載存有加密目錄的裝置到 /mnt/usb
    # 第二項表示以 ecryptfs 掛載加密目錄

URL:
  https://help.ubuntu.com/12.10/serverguide/ecryptfs.html#ecryptfs-automount




ecryptfs 概說
==============================
ecryptfs 全名為 Enterprise Crypt File System，主要用於檔案系統的加密，也可以加密目錄。採用 Stackable Cryptographic File System 技術，其加密/解密層可建構在多種檔案系統上，本身並非真實的完整功能檔案系統。概念上處於 Virtual File System 與 Real File System 之間。

eCryptfs 先用對稱密鑰加密算法(cipher)來加密文件的內容，推薦使用 AES-128 算法，加密金鑰 FEK（File Encryption Key）隨機產生。有些加密文件系統為多個加密文件或整個系統使用同一個 FEK（甚至不是隨機產生的），這會損害系統安全性，因為：
	a. 如果 FEK 泄漏，多個或所有的加密文件將被輕松解密
	b. 如果部分明文泄漏，攻擊者可能推測出其它加密文件的內容
	c. 攻擊者可能從豐富的密文中推測 FEK。

FEK 不應採用明文的形式存放，因此 eCryptfs 以用戶的加密密碼（Passphrase）、公開密鑰算法（如 RSA 算法或 TPM, Trusted Platform Module）的公鑰來加密保護 FEK。用戶的加密密碼先以散列函數處理，然後再使用一種對稱密鑰算法加密 FEK。加密密碼/公鑰稱為 FEFEK（File Encryption Key Encryption Key），加密後的 FEK 則稱為 EFEK（Encrypted File Encryption Key）。由於允許多個授權用戶訪問同一個加密文件，因此 EFEK 可能有多份。

ecryptfs 的解密層存在於記憶體，斷電後不會留下任何痕跡。記憶體不足時可能會被寫入硬碟 SWAP，通過特殊方法還是可以還原。如果資料特別要命，要麼使用大記憶體，要麼使用另一個軟體加密 SWAP。硬碟上面保存的只有加密數據。這樣即使硬碟被偷了，使用資料還原軟體也不可能得到解密文件。

Ubuntu 安裝時若選擇加密家目錄，就是使用此軟體加密。加密後的使用者家目錄實際上是位於 /home/.ecryptfs/user_name/.Private

使用 eCryptfs 加使用者密家目錄時，通常會隨機生成一把 32 位元組的加密金鑰，然後再以「加密密碼」來對「加密金鑰」作加密。如果弄丟了「加密金鑰」，但還記得「加密密碼」，也是沒有用的。以使用者密碼加密後的加密金鑰為 ~/.ecryptfs/wrapped-passphrase，但因為使用者家目錄本身是 /home/.ecryptfs/user_name/.Private 的映射，所以加密金鑰實際是 /home/.ecryptfs/user_name/.Private/.ecryptfs/wrapped-passphrase

使用者可以在主目錄下的 .ecryptfsrc 文件中寫入預設選項，配置文件的格式請參閱 http://ecryptfs.org/

若想強化安全機制，可以 dm-crypt 掛載 SWAP，並以 tmpfs 格式掛載 /tmp 目錄

經 2013/3/1 測試，以手動方式掛載的加密目錄，在系統重灌後，只要記得 passphrase(加密密碼)，仍可以在新系統中掛載原加密目錄。



