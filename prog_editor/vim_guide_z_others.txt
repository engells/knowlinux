#!/bin/bash
# vim:ts=2
# program: Using to note the knowledge about vim
# made by: Engells
# date: Feb 12, 2021
# content: Just for memo



Session
====================
:mksession ~/.vim/sessions/foo.vim
:source ~/.vim/sessions/foo.vim or vim -S ~/.vim/sessions/foo.vim
:help viminfo




Folding
====================
url:	http://ctwyw.com/?p=43
:set foldmethod=expr
:set foldexpr=v:lnum>=2&&v:<=33?1:0         //折疊2到33行
:set foldexpr=v:lnum%3-1?1:'>1'             //三行一折疊
:set foldexpr=getline(v:lnum)=~'^#f'?1:0    //行匹配到#f開頭的返回層級1，其餘0
:set foldexpr=getline(v:lnum)=~'.'?1:0      //折疊連續非空行
:set foldcolumn=1                           // 左側可以顯示折疊的+-號，通過鼠標可以打開關閉折疊效果
:set foldtext=foldtext()                    //可以設置折疊顯示的文字 




Themes
====================
在 vimrc 檔案中寫入下列指令
  colorscheme theme_name

在 Vim 裡下指令：:so % 或 :so ~/.vimrc 或 :so /path/to/佈景設定檔，即可更新佈景

佈景來源
	Ubuntu Bionic		/usr/share/vim/vim80/color
  Distinguished		https://github.com/Lokaltog/vim-distinguished
  Jellybeans			https://github.com/nanotech/jellybeans.vim
  Vividchalk			https://github.com/tpope/vim-vividchalk
  Candy						http://www.vim.org/scripts/script.php?script_id=282
  Solarized				https://github.com/altercation/vim-colors-solarized
	material-theme	https://raw.githubusercontent.com/jdkanani/vim-material-theme/master/colors/material-theme.vim


URL
  Vim 的顏色設定：http://aknow-work.blogspot.tw/2013/05/vim-color.html
  Path: /usr/share/vim/vimxx/colors/, ~/vim/colors/




執行模式
====================
普通模式 (Normal-mode)
  一般，啟動編輯器之後就處於普通模式

可視模式 (Visual-mode)
  與普通模式相似，只是游標移動會擴展高亮的區域。而其它非移動命令會作用于高亮的區域。
  在普通模式下，可以通過 v 或 V 或 CTRL-V 進入。
  如果沒有關閉 ‘showmode’ 選項，視窗底部會出現「—VISUAL—」 字樣。

選擇模式 (Select-mode)
  與 Windows 下其它編輯器的選擇模式很像。選中字元後，輸入一個可顯示字元，會刪掉所有先前選中的所有字元，並進入插入模式。
  在普通模式下按 gh 進入，或在 gvim 中用滑鼠拖選區域。
  視窗底部會出現 「—SELECT—」 字樣。

插入模式 (Insert-mode)
  輸入的內容會插入到緩衝區。
  普通模式下按 i 或 a 進入插入模式。
  視窗底部會出現 「—INSERT—」 字樣。

命令列模式 (Cmdline-mode)
  命令列模式可以在視窗底部輸入一行命令。可以用 <:> 執行命令，用 <?> 和 </> 來查找。<.>重複上一個命令。

Ex 模式 (Ex-mode)
  與命令列模式類似，只是執行完一條命令後，會繼續停留在 Ex 模式。在普通模式下，按 Q 進入 Ex 模式。




設定檔
====================
變數
  $VIM="/usr/share/vim/
  $VIMRUNTIME="/usr/share/vim/vim73"

預設的應用程式層級的設定檔
  $VIM/vimrc    --> /etc/vim/vimrc
  $VIM/gvimrc   --> /etc/vim/gvimrc

使用者層級的設定檔
  $HOME/.vimrc
  $HOME/.gvimrc

將設定檔切分成數個檔案
  利用 source 指令可讓 vim 載入外部設定檔
    for CONFIG in split(glob('/path/to/*.vim'), '\n')
      exe 'source' CONFIG
    endfor
  指令 :echo split(glob('/path/to/*.vim'), '\n')，可查詢外部設定檔完整路徑暨檔名


預設目錄結構
  1. 指令 :help vimfiles，可以查詢 vim 預設目錄結
  2. $HOME/.vim/autoload/，執行 vim 時，自動執行該目錄底下的 xxxx.vim 檔案
  3. $HOME/.vim/ftplugin/，編輯不同類型(html、css、python等)檔案時，執行該目錄底下對應的 xxxx.vim 檔案
  4. $HOME/.vim/plugin/，執行 vim 時，該目錄底下的 xxxx.vim 檔案作為 .vimrc 的補充檔案執行
  5. $HOME/.vim/colors，該目錄為 vim 的佈景主題檔案所在




其他參考資料
====================
提高 Vim 使用效率的 12 個技巧：http://blog.jobbole.com/87481/


