##!/bin/bash
# vim:ts=4
# program: Using to note the knowledge about vim
# made by: Engells
# date: Mar 14, 2019
# content: Just for memo, 中括弧[]內文字表示可省略



檔案功能
====================
	指令				說明
* 	:w				存檔 (加 ! 表示強制存檔)
* 	:w 檔案名稱		另存新檔
* 	:q				退出 vi (加 ! 表示不存檔強制退出)
* 	:wq				存檔並退出 vi
* 	:x				存檔並退出 vi
	:w !sudo tee %	當你編輯好檔案要存檔時，卻發現沒有寫入檔案的權限! 用這會指令可以讓你直接以 root 的權限存檔
* 	:e 檔案名稱		編輯其它檔案
* 	:e!				還原至檔案編修前的狀態
	:r 檔案名稱		讀入檔案內容，並加到游標行的後面
* 	:n				切換到下一個開啟的檔案
* 	:N				切換到上一個開啟的檔案
* 	:set nu			顯示行號
* 	:set nonu		取消行號顯示
* 	:files			列出所有開啟的檔案




視窗分割
====================
	指令				說明
* 	:new			新增水平分割視窗
* 	:new 檔案名稱		新增水平分割視窗，並在新增的視窗載入檔案
* 	:vnew			新增垂直分割視窗
* 	:vnew 檔案名稱	新增垂直分割視窗，並在新增的視窗載入檔案
	:sp				新增水平分割視窗，並在新增的視窗載入目前的檔案
	:sp 檔案名稱		新增水平分割視窗，並在新增的視窗載入檔案
	:vsp			新增垂直分割視窗，並在新增的視窗載入目前的檔案
	:vsp 檔案名稱		新增垂直分割視窗，並在新增的視窗載入檔案
* 	<C+W> + <方向鍵>	切換視窗
* 	:only			僅保留目前的視窗




其它指令
====================
	指令				說明
*	~				英文字母大小寫互換
* 	.				重覆上一個指令
*	retab			將檔案內現有之「TAB」字元替換為空白字元
* 	J				將游標行與下一行合併
* 	u				還原指令
* 	<C+R>			重做指令
* 	<C+N>			自動補齊曾輸入過的單字

	! 命令			執行 linux 指令，並顯示執行結果
	:r! command		執行 linux 指令，將執行結果寫入游標所在列
	:nr! command	將第 n 列文字作為 linux 指令執行
	:m,nr! command	將第 m 至 n 列文字作為 linux 指令執行，無法 undo
	:r sh_file			執行 sh script

	TOhtml			將目前編輯的檔案轉換成 HTML 原始碼 (會新增一個水平分割視窗)
	:swapname		查詢 swap
	:preserve		將修改保存至 swap
	:recover		自 swap 回復文件

	:color <Tab>	逐一出現在 $HOME/.vim/colors 的佈景主題，:color 完整指令 :colorscheme
	:color <C-d>	列出全部在 $HOME/.vim/colors 的佈景主題




檔案瀏覽器操作，請先以 :Ex 相關指令進入檔案瀏覽器
====================
	指令				說明
* 	:Ex				開啟檔案瀏覽器
* 	:Ex 路徑			於指定路徑開啟檔案瀏覽器
	:Hex			分割水平視窗後，再開啟檔案瀏覽器
	:Vex			分割垂直視窗後，再開啟檔案瀏覽器
	:Tex			新增頁籤後，再開啟檔案瀏覽器
	:Hex 路徑		分割水平視窗後，再於指定路徑開啟檔案瀏覽器
	:Vex 路徑		分割垂直視窗後，再於指定路徑開啟檔案瀏覽器
	:Tex 路徑		新增頁籤後，再於指定路徑開啟檔案瀏覽器

* 	-				到上層目錄
* 	d				建立目錄
* 	D				刪除目錄
* 	R				重新命名
* 	s				切換排序方式
	r				切換升冪/降冪排序
	i				切換檔案的排列方式
* 	/				搜尋字串
	x				執行檔案
* 	o				新增水平視窗
* 	v				新增垂直視窗



