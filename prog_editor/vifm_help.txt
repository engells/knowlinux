# vim:ts=4


vifm是一個仿 Vim 操作方式的 File Manager，感謝 LGJ 的報馬，我才知道有這個東東。現在雖然還有點陽春，也不夠穩，但相信會愈來愈好的，大家都來玩玩看吧！


生存指令
==============================
:q 或 :x		→ 離開 vifm
:h[elp]		→ 必學指令！必需將 vim-help.txt 放到 %APPDATA%\Vifm 底下。


移動游標
===============================
Space/Tab	→ 切換窗格
j			→ 向下移動
k			→ 向上移動
gg			→ 移動到檔案清單最頂端
G			→ 移動到檔案清單最底部
:number		→ 移到第 number 列
:0			→ 移動到檔案清單最頂端
:$			→ 移動到檔案清單最底部
[count]j	→ 向下移動 [count] 次
[count]k	→ 向上移動 [count] 次
[count]gg	→ 前往第 count 列
[count]G	→ 前往第 count 列
[count]%	→ 前進到檔案清單 [count]% 的位置，譬如：輸入 :30% 就會前進到檔案清單 30% 的位置
Ctrl-b		→ 往上捲動一頁
Ctrl-f		→ 往下捲動一頁


切換目錄
==============================
h			→ 向上一層目錄
l			→ 與 Enter 鍵功能相同，若游標所在是資料夾，就進入資料夾；若是檔案，以預設方式開啟 (eg.打開文字檔、音樂檔、執行可執行檔)
:cd [folder]→ 改變所在的目錄 (在 Windows 仍必需用 "/" 代表根目錄與目錄的分隔，不可只打 :cd，Vifm 會當掉)
:his[tory]	→ 列出最近去過的目錄清單，可在清單中切換過去
:volume		→ 列出磁碟機選單，可直接切換過去 (Only Win32)


選取檔案
==============================
v			→ 進入 Visual 模式。進入此模式後，移動游標，會選取游標所在的檔案
t			→ 在檔案清單中按 t，會把游標所在的檔案選取起來，如果檔案本身已被選取，就會取消其被選取的狀態
Ctrl-c 或 Esc	→ 取消選取的檔案


搜尋檔案
==============================
/regular_expression_pattern		→ 把目前檔案清單中符合指定 pattern 的檔案反白標示出來(即讓這些檔案屬於「被選取」的狀態)
n		→ 往下找
N		→ 往上找
:fil[ter] regular_expression_pattern		→ 把符合指定 pattern 的檔案篩掉，也就是不顯示符合指定 pattern 的檔案。
												被過濾掉的檔案，搜尋(/)與命令(:command)對它們沒有作用。
:in[vert]		→ 這是 filter 的反效果
zm		→ 篩掉所有以小數點開頭的檔案
zo		→ 顯示所有小數點開頭的檔案
zf		→ 先選取檔案後再用此命令，檔案清單中被選取的檔案，就會被篩掉，如要再顯示出來，可按 zO
zM		→ 指定 filter 後再用此命令，檔案清單中符合 filter pattern 的檔案，就會被篩掉
zO		→ 指定 filter 後再用此命令，檔案清單中符合 filter pattern 的檔案，就會顯示出來，不會被篩掉


管理檔案
==============================
cw		→ 重新命名
dd		→ 預設將選取的檔案移到 trash directory
yy		→ 拉(yank)選取的檔案(即一般我們所謂「複製」的功能)
p		→ 將拉選的檔案複製或移動到目前所在資料夾 (即一般我們所謂「貼上」的功能)
[count]dd		→ 從游標位置所在的檔案開始，將 [count] 個檔案移到 trash directory
[count]yy		→ 從游標位置所在的檔案開始，拉(yank) [count] 個檔案
:[count] user command		→ 目前還沒實作
:[count] command		→ 目前內建的只有:[count]d[elete]。例如： :3d 會從目前游標所在的檔案算起，刪除 3 個檔案。
:empty		→ 把 trash directory 中的檔案永久刪除
:copy		→ 把目前所在或選取的檔案複製到另一個窗格 (Win32 Only)
:move		→ 把目前所在或選取的檔案移動到另一個窗格 (Win32 Only)


檔案資訊
==============================
Ctrl-g		→ 顯示檔案資訊


顯示模式
==============================
:view		→ 可在另一個窗格顯示本窗格中游標所在檔案的內容，再執行一次會恢復原來兩個窗格都顯示檔案清單的模式
:so[rt]		→ 切換排序的方式，可按檔名、副檔名、大小……或其他檔案屬性來排序。
:sp[lit]	→ 切換為雙窗格。Vifm 預設已是雙窗格，不知何時需要用到此命令？而且此命令目前似乎無效，執行後顯示「Unknown Command」


書籤功能
==============================
m[a-z][A-Z][0-9]	→ 設定書籤
'[a-z][A-Z][0-9]	→ 前往書籤
:marks				→ 顯示書籤選單


執行外部命令
==============================
:sh				→ 開啟一個 shell
:! program		→ 執行 shell 命令
:! program&		→ 在背景中執行 shell 的命令
:!! program		→ 與 :! program 相同，但在回到 vifm 前，會先暫停螢幕畫面
:e				→ 呼叫 vim 來編輯游標所在的檔案
				 (根據測試，如果選取了兩個檔案，無法在 vim 中正確呼叫出兩個檔案，會產生一個新檔，檔名為兩者相加)


進階自訂功能
==============================
:com[mand]			→ 列出所有自訂的 user commands
:com name action	→ 設定新的 user command。name 是自訂命令的名稱，action 可以是 shell 命令。
						與 vim 的 user command 不同的是，vifm 的 user command 不需要用大寫字母開頭。
						預設會在 shell 中執行。如果要在背景執行，要在命令的最後加上 & 符號。例如： :com rm rm %f &
:com! name action	→ 覆蓋先前自訂的命令
:delc command_name	→ 移除名稱為 command_name 的自訂命令


其他
==============================
Ctrl-c 或 Esc		→ 取消
Ctrl-l				→ 重繪螢幕


